apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: argocd
    meta.helm.sh/release-namespace: argocd
    service.beta.kubernetes.io/aws-load-balancer-additional-resource-tags: prefered_domain=argocd.gitlab-primary.infra.cloud-city
    service.beta.kubernetes.io/aws-load-balancer-attributes: load_balancing.cross_zone.enabled=true
    service.beta.kubernetes.io/aws-load-balancer-name: argocd-gitlab-primary
    service.beta.kubernetes.io/aws-load-balancer-nlb-target-type: ip
    service.beta.kubernetes.io/aws-load-balancer-type: external
  creationTimestamp: "2025-07-14T16:22:37Z"
  finalizers:
  - service.k8s.aws/resources
  labels:
    app.kubernetes.io/component: server
    app.kubernetes.io/instance: argocd
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: argocd-server
    app.kubernetes.io/part-of: argocd
    app.kubernetes.io/version: v3.0.6
    helm.sh/chart: argo-cd-8.1.2
  name: argocd-server
  namespace: argocd
  resourceVersion: "7618845"
  uid: e98b7822-0a5d-4764-a702-5ec1806d2ed6
spec:
  allocateLoadBalancerNodePorts: true
  clusterIP: 10.100.218.218
  clusterIPs:
  - 10.100.218.218
  externalTrafficPolicy: Cluster
  internalTrafficPolicy: Cluster
  ipFamilies:
  - IPv4
  ipFamilyPolicy: SingleStack
  loadBalancerClass: service.k8s.aws/nlb
  ports:
  - name: http
    nodePort: 31768
    port: 80
    protocol: TCP
    targetPort: 8080
  - name: https
    nodePort: 32603
    port: 443
    protocol: TCP
    targetPort: 8080
  selector:
    app.kubernetes.io/instance: argocd
    app.kubernetes.io/name: argocd-server
  sessionAffinity: None
  type: LoadBalancer
status:
  loadBalancer:
    ingress:
    - hostname: argocd-gitlab-primary-a618ffbe50e42b8b.elb.us-east-1.amazonaws.com
